{"ast":null,"code":"import { all, put, takeEvery, call } from 'redux-saga/effects';\nimport { spotifyApi } from '../../api';\n\nfunction* getAlbuns(action) {\n  const {\n    token\n  } = action.payload;\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = yield call(spotifyApi.get, '/recommendations?seed_genres=metal', config);\n  const x = response.data.map(x => {\n    return {\n      a: 2\n    };\n  });\n  console.log(response.data);\n  yield put({\n    type: \"spotify/GET_ALBUNS\",\n    payload: {\n      albuns: response.data\n    }\n  });\n}\n\nexport default function* spotifySaga() {\n  yield all([takeEvery('@spotify/GET_ALBUNS', getAlbuns)]);\n}","map":{"version":3,"sources":["/home/reis/Documentos/programacao/react/metal-spotify/app/src/store/spotify/saga.ts"],"names":["all","put","takeEvery","call","spotifyApi","getAlbuns","action","token","payload","config","headers","Authorization","response","get","x","data","map","a","console","log","type","albuns","spotifySaga"],"mappings":"AACA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,EAA8BC,IAA9B,QAAyC,oBAAzC;AAEA,SAASC,UAAT,QAA2B,WAA3B;;AAYA,UAAUC,SAAV,CAAoBC,MAApB,EAAsC;AAElC,QAAM;AAAEC,IAAAA;AAAF,MAAYD,MAAM,CAACE,OAAzB;AAEA,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAEJ;AAAhB;AADE,GAAf;AAGA,QAAMK,QAAmB,GAAG,MAAMT,IAAI,CAACC,UAAU,CAACS,GAAZ,EAClC,oCADkC,EAElCJ,MAFkC,CAAtC;AAKE,QAAMK,CAAC,GAAGF,QAAQ,CAACG,IAAT,CAAcC,GAAd,CAAmBF,CAAD,IAAS;AACjC,WAAO;AACHG,MAAAA,CAAC,EAAC;AADC,KAAP;AAGH,GAJS,CAAV;AAMFC,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACG,IAArB;AACA,QAAMd,GAAG,CAAC;AAACmB,IAAAA,IAAI,EAAE,oBAAP;AAA6BZ,IAAAA,OAAO,EAAE;AAAEa,MAAAA,MAAM,EAAET,QAAQ,CAACG;AAAnB;AAAtC,GAAD,CAAT;AAGH;;AAGD,eAAe,UAAUO,WAAV,GAAuB;AAClC,QAAMtB,GAAG,CAAC,CACNE,SAAS,CAAC,qBAAD,EAAwBG,SAAxB,CADH,CAAD,CAAT;AAIH","sourcesContent":["import { AnyAction } from '@reduxjs/toolkit'\nimport { all, put, takeEvery, call} from 'redux-saga/effects'\n\nimport { spotifyApi } from '../../api'\n\n\ninterface IResponse {\n    data: {\n       tracks: {\n\n       }\n    }\n}\n\n\nfunction* getAlbuns(action: AnyAction){\n\n    const { token } = action.payload;\n\n    const config = {\n        headers: {Authorization: token }\n    }\n    const response: IResponse = yield call(spotifyApi.get,\n        '/recommendations?seed_genres=metal',\n        config\n        )\n\n      const x = response.data.map((x:any)=>{\n          return {\n              a:2\n          }\n      })  \n\n    console.log(response.data)\n    yield put({type: \"spotify/GET_ALBUNS\", payload: { albuns: response.data}})\n\n\n}\n\n\nexport default function* spotifySaga(){\n    yield all([\n        takeEvery('@spotify/GET_ALBUNS', getAlbuns),\n       \n    ])\n}\n"]},"metadata":{},"sourceType":"module"}