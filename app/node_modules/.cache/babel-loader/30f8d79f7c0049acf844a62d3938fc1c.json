{"ast":null,"code":"var _jsxFileName = \"/home/reis/Documentos/programacao/react/metal-spotify/app/src/routes/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport Home from '../pages/Home';\nimport Album from '../pages/Album';\nimport UserHome from '../pages/UserHome';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyRoutes() {\n  _s();\n\n  const location = useLocation();\n  useEffect(() => {\n    const [ad, um] = location.pathname.split('/');\n\n    if (um === '/album/') {\n      console.log('albummm');\n    } else {\n      console.log('not album');\n    }\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [localStorage.getItem(\"token_token\") ? /*#__PURE__*/_jsxDEV(Route, {\n      element: /*#__PURE__*/_jsxDEV(UserHome, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this),\n      path: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Route, {\n      element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this),\n      path: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      element: /*#__PURE__*/_jsxDEV(Album, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this),\n      path: \"/album/:id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this);\n}\n\n_s(MyRoutes, \"BXcZrDMM76mmm4zA8/QV5UbMNXE=\", false, function () {\n  return [useLocation];\n});\n\n_c = MyRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutes\");","map":{"version":3,"sources":["/home/reis/Documentos/programacao/react/metal-spotify/app/src/routes/index.tsx"],"names":["React","useEffect","Route","Routes","Home","Album","UserHome","useLocation","MyRoutes","location","ad","um","pathname","split","console","log","localStorage","getItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAA+BC,KAA/B,EAAsCC,MAAtC,QAAkE,kBAAlE;AAGA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,OAAQC,KAAR,MAAmB,gBAAnB;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,eAAe,SAASC,QAAT,GAAmB;AAAA;;AAE9B,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACAN,EAAAA,SAAS,CAAC,MAAI;AAEV,UAAM,CAACS,EAAD,EAAKC,EAAL,IAAYF,QAAQ,CAACG,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,CAAlB;;AACA,QAAGF,EAAE,KAAK,SAAV,EAAoB;AAChBG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KAFD,MAEK;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;AAEJ,GATQ,EASN,CAACN,QAAD,CATM,CAAT;AAYA,sBAEQ,QAAC,MAAD;AAAA,eAICO,YAAY,CAACC,OAAb,CAAqB,aAArB,iBAEG,QAAC,KAAD;AACA,MAAA,OAAO,eACH,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAIA,MAAA,IAAI,EAAC;AAJL;AAAA;AAAA;AAAA;AAAA,YAFH,gBASD,QAAC,KAAD;AACA,MAAA,OAAO,eACH,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAIA,MAAA,IAAI,EAAC;AAJL;AAAA;AAAA;AAAA;AAAA,YAbA,eAqBA,QAAC,KAAD;AACA,MAAA,OAAO,eACH,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAIA,MAAA,IAAI,EAAC;AAJL;AAAA;AAAA;AAAA;AAAA,YArBA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AAmCH;;GAlDuBT,Q;UAEHD,W;;;KAFGC,Q","sourcesContent":["import React, { useEffect } from 'react'\n\nimport {Navigate, useNavigate, Route, Routes, BrowserRouter} from 'react-router-dom'\n\n\nimport Home from '../pages/Home'\n\nimport  Album from '../pages/Album'\n\nimport UserHome from '../pages/UserHome'\n\nimport { useLocation } from 'react-router-dom'\n\nexport default function MyRoutes(){\n\n    const location = useLocation()\n    useEffect(()=>{\n\n        const [ad, um,] = location.pathname.split('/')\n        if(um === '/album/'){\n            console.log('albummm')\n        }else{\n            console.log('not album')\n        }\n\n    }, [location])\n\n\n    return (\n        \n            <Routes>\n\n\n\n            {localStorage.getItem(\"token_token\") ?\n            (\n                <Route\n                element={\n                    <UserHome />\n                }\n                path='/'\n                />\n            ) :\n            <Route\n            element={\n                <Home />\n            }\n            path='/'\n            />\n            }\n\n            <Route\n            element={\n                <Album />\n            }\n            path='/album/:id'\n            />  \n           \n\n            </Routes>\n        \n     \n    )\n}\n"]},"metadata":{},"sourceType":"module"}