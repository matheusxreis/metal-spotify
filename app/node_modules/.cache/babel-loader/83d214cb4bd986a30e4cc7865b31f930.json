{"ast":null,"code":"import { all, put, takeEvery, call } from 'redux-saga/effects';\nimport { api } from '../../api';\nimport axios from 'axios';\n\nfunction* signIn() {\n  console.log('aaaaaaa');\n  yield window.location.href = 'http://localhost:8080/auth/login';\n}\n\nfunction* getToken() {\n  const response = yield call(api.post, '/auth/token');\n  const token = `Bearer ${response.data}`;\n  yield put({\n    type: \"auth/GET_TOKEN\",\n    payload: token\n  });\n  yield put({\n    type: '@user/GET_USER_INFO',\n    pay\n  });\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const responseUser = yield call(axios.get, 'https://api.spotify.com/v1/me', config);\n  console.log(responseUser);\n}\n\nexport default function* authSaga() {\n  yield all([takeEvery('@auth/SIGN_IN', signIn), takeEvery('@auth/GET_TOKEN', getToken)]);\n}","map":{"version":3,"sources":["/home/reis/Documentos/programacao/react/metal-spotify/app/src/store/auth/saga.ts"],"names":["all","put","takeEvery","call","api","axios","signIn","console","log","window","location","href","getToken","response","post","token","data","type","payload","pay","config","headers","Authorization","responseUser","get","authSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,EAA8BC,IAA9B,QAAyC,oBAAzC;AAGA,SAASC,GAAT,QAAmB,WAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAOA,UAAUC,MAAV,GAAkB;AAEdC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,QAAMC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAsB,kCAA5B;AAIH;;AAED,UAAUC,QAAV,GAAoB;AAChB,QAAMC,QAAkB,GAAG,MAAMV,IAAI,CACjCC,GAAG,CAACU,IAD6B,EAEjC,aAFiC,CAArC;AAKA,QAAMC,KAAK,GAAI,UAASF,QAAQ,CAACG,IAAK,EAAtC;AAEA,QAAMf,GAAG,CAAC;AAACgB,IAAAA,IAAI,EAAE,gBAAP;AAAyBC,IAAAA,OAAO,EAAEH;AAAlC,GAAD,CAAT;AAEA,QAAMd,GAAG,CAAC;AAACgB,IAAAA,IAAI,EAAE,qBAAP;AAA8BE,IAAAA;AAA9B,GAAD,CAAT;AACA,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAGP;AAAjB;AADE,GAAf;AAGA,QAAMQ,YAAuB,GAAG,MAAMpB,IAAI,CACtCE,KAAK,CAACmB,GADgC,EAEtC,+BAFsC,EAGtCJ,MAHsC,CAA1C;AAKAb,EAAAA,OAAO,CAACC,GAAR,CAAYe,YAAZ;AACH;;AAID,eAAe,UAAUE,QAAV,GAAoB;AAC/B,QAAMzB,GAAG,CAAC,CACNE,SAAS,CAAC,eAAD,EAAkBI,MAAlB,CADH,EAENJ,SAAS,CAAC,iBAAD,EAAoBU,QAApB,CAFH,CAAD,CAAT;AAIH","sourcesContent":["import { all, put, takeEvery, call} from 'redux-saga/effects'\nimport { push } from 'react-router-redux'\n\nimport { api }from '../../api'\n\nimport axios from 'axios'\n\ninterface IResponse {\n    data: {\n        access_token:string;\n    }\n}\nfunction* signIn(){\n\n    console.log('aaaaaaa')\n    yield window.location.href= 'http://localhost:8080/auth/login'\n\n\n   \n}\n\nfunction* getToken(){\n    const response:IResponse = yield call(\n        api.post, \n        '/auth/token'\n    )\n\n    const token = `Bearer ${response.data}`\n\n    yield put({type: \"auth/GET_TOKEN\", payload: token})\n\n    yield put({type: '@user/GET_USER_INFO', pay})\n    const config = {\n        headers: {Authorization : token}\n    }\n    const responseUser: IResponse = yield call(\n        axios.get,\n        'https://api.spotify.com/v1/me',\n        config\n    )\n    console.log(responseUser)\n}\n\n\n\nexport default function* authSaga(){\n    yield all([\n        takeEvery('@auth/SIGN_IN', signIn),\n        takeEvery('@auth/GET_TOKEN', getToken)\n    ])\n}"]},"metadata":{},"sourceType":"module"}