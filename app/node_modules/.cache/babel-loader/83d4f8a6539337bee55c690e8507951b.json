{"ast":null,"code":"var _jsxFileName = \"/home/reis/Documentos/programacao/react/metal-spotify/app/src/pages/Album/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { AlbumContainer, Header, Content, PlayerDiv } from './styles';\nimport Cover from '../../images/Cover.png';\nimport { useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { spotifyApi } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Album() {\n  _s();\n\n  const token = useSelector(state => {\n    var _state$auth;\n\n    return state === null || state === void 0 ? void 0 : (_state$auth = state.auth) === null || _state$auth === void 0 ? void 0 : _state$auth.token;\n  });\n  const array = [1, 2, 3, 4, 5, 6, 8, 9, 10];\n  const [albumId, setAlbumId] = useState('');\n  const [album, setAlbum] = useState('');\n  const location = useLocation();\n  useEffect(() => {\n    const [,, query] = location.pathname.split(\"/\");\n    setAlbumId(query);\n\n    async function getAlbum() {\n      const config = {\n        headers: {\n          Authorization: token\n        }\n      };\n      const response = await spotifyApi.get(`/albums/${query}`, config);\n      console.log(response.data);\n      const x = {\n        artist: response.data.artists[0].name,\n        image: response.data.images[0].url,\n        name: response.data.name\n      };\n      setAlbum(x);\n    }\n\n    getAlbum();\n  }, [location]); // useEffect(()=>{\n  // }, [locatio])\n\n  return /*#__PURE__*/_jsxDEV(AlbumContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Cover\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" \\xC1LBUM \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: album === null || album === void 0 ? void 0 : album.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", album === null || album === void 0 ? void 0 : album.artist, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(PlayerDiv, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: album === null || album === void 0 ? void 0 : album.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'title',\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" # T\\xEDtulo \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), array.map(x => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'musics',\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [x, \" Walk \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Pantera \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Album, \"+ikDBOo+6q6g2KwVN0KHDU97wmI=\", false, function () {\n  return [useSelector, useLocation];\n});\n\n_c = Album;\n\nvar _c;\n\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"sources":["/home/reis/Documentos/programacao/react/metal-spotify/app/src/pages/Album/index.tsx"],"names":["React","useEffect","useState","AlbumContainer","Header","Content","PlayerDiv","Cover","useLocation","useSelector","spotifyApi","Album","token","state","auth","array","albumId","setAlbumId","album","setAlbum","location","query","pathname","split","getAlbum","config","headers","Authorization","response","get","console","log","data","x","artist","artists","name","image","images","url","map"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { AlbumContainer, Header, Content, PlayerDiv} from './styles'\n\nimport Cover from '../../images/Cover.png'\nimport { useLocation } from 'react-router-dom'\nimport PlayIcon from '../../images/PlayIcon.svg'\n\nimport { useSelector } from 'react-redux'\n\nimport { spotifyApi } from '../../api'\nexport default function Album(){\n\n    \n    const token = useSelector<string>((state:any)=>state?.auth?.token) \n\n    const array = [1, 2, 3, 4, 5, 6, 8, 9, 10]\n    const [albumId, setAlbumId] = useState<string>('')\n    const [album, setAlbum] = useState<any>('')\n    const location = useLocation()\n\n    useEffect(()=>{\n\n        const [, , query] = location.pathname.split(\"/\")\n\n        setAlbumId(query)\n        async function  getAlbum(){\n            const config: any = {\n                headers: { Authorization: token}\n            }\n           const response = await spotifyApi.get(`/albums/${query}`, config)\n            \n           console.log(response.data)\n            const x = {\n                artist: response.data.artists[0].name,\n                image: response.data.images[0].url,\n                name: response.data.name\n            }\n\n            setAlbum(x)\n        }\n\n        getAlbum()\n       \n\n        }, [location])\n    \n        // useEffect(()=>{\n\n        // }, [locatio])\n    return (\n        <AlbumContainer>\n\n            <Header>\n            <img src={Cover} />\n            <div>\n            <h3> ÁLBUM </h3>\n            <h1>{album?.name}</h1>\n            <p> {album?.artist} </p>\n            </div>\n            </Header>\n\n\n            <Content>\n                <PlayerDiv>\n                    <img src={album?.image} />\n                </PlayerDiv>\n                <div className={'title'}>\n                <h3> # Título </h3> \n                </div>\n               \n                {array.map(x=>(\n                    <div className={'musics'}>\n                    <h3>{x} Walk </h3>\n                    <p> Pantera </p>\n                    </div>\n                ))}\n\n            </Content>\n\n\n        </AlbumContainer>\n    )\n}"]},"metadata":{},"sourceType":"module"}