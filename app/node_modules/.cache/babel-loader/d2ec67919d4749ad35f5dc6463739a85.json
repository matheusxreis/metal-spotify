{"ast":null,"code":"var _jsxFileName = \"/home/reis/Documentos/programacao/react/metal-spotify/app/src/pages/UserHome/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { HomeContainer } from './styles';\nimport { RollDiv } from '../../components/RollDiv';\nimport { Card } from '../../components/Card';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { GetAlbuns } from '../../store/spotify/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserHome() {\n  _s();\n\n  const dispatch = useDispatch();\n  const token = useSelector(state => {\n    var _state$auth;\n\n    return state === null || state === void 0 ? void 0 : (_state$auth = state.auth) === null || _state$auth === void 0 ? void 0 : _state$auth.token;\n  });\n  const albuns = useSelector(state => {\n    var _state$spotify;\n\n    return (_state$spotify = state.spotify) === null || _state$spotify === void 0 ? void 0 : _state$spotify.albuns;\n  });\n  const artists = useSelector(state => {\n    var _state$spotify2;\n\n    return (_state$spotify2 = state.spotify) === null || _state$spotify2 === void 0 ? void 0 : _state$spotify2.artists;\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 1500);\n  }, []);\n  useEffect(() => {\n    if (token) {\n      dispatch(GetAlbuns(token));\n    }\n  }, [token]);\n  const array = [0, 1, 2, 3, 5, 6];\n  return /*#__PURE__*/_jsxDEV(HomeContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Albuns mais pesados que o pr\\xF3prio metal: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(RollDiv, {\n      children: albuns && albuns.map(x => /*#__PURE__*/_jsxDEV(Card, {\n        link: `/album/${x.id}`,\n        title: x.name,\n        description: x.artist,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: x.images[1].url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tente essas bandas: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(RollDiv, {\n      children: artists && artists.map(x => /*#__PURE__*/_jsxDEV(Card, {\n        link: '',\n        title: x.name,\n        description: x.genres[1],\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"bandsImg\",\n          src: x.images[0].url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserHome, \"lo2PNfQdO5wqPXLeM1+u4y2XsZw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = UserHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserHome\");","map":{"version":3,"sources":["/home/reis/Documentos/programacao/react/metal-spotify/app/src/pages/UserHome/index.tsx"],"names":["useEffect","useState","HomeContainer","RollDiv","Card","useSelector","useDispatch","GetAlbuns","UserHome","dispatch","token","state","auth","albuns","spotify","artists","loading","setLoading","setTimeout","array","map","x","id","name","artist","images","url","genres"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,UAA9B;AAGA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,IAAT,QAAqB,uBAArB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,4BAA1B;;AAgCA,eAAe,SAASC,QAAT,GAAmB;AAAA;;AAE9B,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,KAAK,GAAGL,WAAW,CAAUM,KAAD;AAAA;;AAAA,WAAgBA,KAAhB,aAAgBA,KAAhB,sCAAgBA,KAAK,CAAEC,IAAvB,gDAAgB,YAAaF,KAA7B;AAAA,GAAT,CAAzB;AACA,QAAMG,MAAgB,GAAIR,WAAW,CAAEM,KAAD;AAAA;;AAAA,6BAAaA,KAAK,CAACG,OAAnB,mDAAa,eAAeD,MAA5B;AAAA,GAAD,CAArC;AACA,QAAME,OAAmB,GAAIV,WAAW,CAAEM,KAAD;AAAA;;AAAA,8BAAaA,KAAK,CAACG,OAAnB,oDAAa,gBAAeC,OAA5B;AAAA,GAAD,CAAxC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAU,IAAV,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZkB,IAAAA,UAAU,CAAC,MAAI;AACbD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJQ,EAIN,EAJM,CAAT;AAOJjB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGU,KAAH,EAAS;AACLD,MAAAA,QAAQ,CACJF,SAAS,CAACG,KAAD,CADL,CAAR;AAIH;AACJ,GAPQ,EAON,CAACA,KAAD,CAPM,CAAT;AASI,QAAMS,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAd;AAEA,sBAII,QAAC,aAAD;AAAA,4BAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,eAKA,QAAC,OAAD;AAAA,gBACKN,MAAM,IAAIA,MAAM,CAACO,GAAP,CAAWC,CAAC,iBACnB,QAAC,IAAD;AAAM,QAAA,IAAI,EAAG,UAASA,CAAC,CAACC,EAAG,EAA3B;AAA8B,QAAA,KAAK,EAAED,CAAC,CAACE,IAAvC;AAA6C,QAAA,WAAW,EAAEF,CAAC,CAACG,MAA5D;AAAA,+BACK;AAAK,UAAA,GAAG,EAAEH,CAAC,CAACI,MAAF,CAAS,CAAT,EAAYC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,cADO;AADf;AAAA;AAAA;AAAA;AAAA,YALA,eAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdA,eAeA,QAAC,OAAD;AAAA,gBACKX,OAAO,IAAIA,OAAO,CAACK,GAAR,CAAYC,CAAC,iBACrB,QAAC,IAAD;AACA,QAAA,IAAI,EAAE,EADN;AAEA,QAAA,KAAK,EAAEA,CAAC,CAACE,IAFT;AAEe,QAAA,WAAW,EAAEF,CAAC,CAACM,MAAF,CAAS,CAAT,CAF5B;AAAA,+BAGI;AACA,UAAA,SAAS,EAAC,UADV;AAEA,UAAA,GAAG,EAAEN,CAAC,CAACI,MAAF,CAAS,CAAT,EAAYC;AAFjB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cADQ;AADhB;AAAA;AAAA;AAAA;AAAA,YAfA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ;AAoCH;;GA9DuBlB,Q;UAEHF,W,EACHD,W,EACYA,W,EACGA,W;;;KALTG,Q","sourcesContent":["import { useEffect, useState } from 'react'\nimport { HomeContainer } from './styles'\nimport Cover from '../../images/Cover.png'\nimport { ListenButton } from '../../components/ListenButton'\nimport { RollDiv } from '../../components/RollDiv'\nimport { Card } from '../../components/Card'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { GetAlbuns } from '../../store/spotify/action'\n\nimport { Link } from 'react-router-dom'\nimport { spotifyApi } from '../../api'\n\ninterface Itoken {\n\n    auth: {\n        token:string\n    }\n}\n\ninterface Iimage {\n    url: string;\n}\ninterface Ialbum {\n\n    name:string;\n    link:string;\n    images: Iimage[];\n    artist: string;\n    id:string;\n}\n\n\ninterface Iartists {\n    name:string;\n    link:string;\n    images: Iimage[];\n    genres: string[];\n    id: string[];\n}\nexport default function UserHome(){\n\n    const dispatch = useDispatch()\n    const token = useSelector<Itoken>((state:Itoken)=>state?.auth?.token) \n    const albuns: Ialbum[]  = useSelector((state:any)=>state.spotify?.albuns)\n    const artists: Iartists[]  = useSelector((state:any)=>state.spotify?.artists)\n    const [loading, setLoading] = useState<boolean>(true)\n\n    useEffect(()=>{\n      setTimeout(()=>{\n        setLoading(false)\n      }, 1500)\n    }, [])\n\n    \nuseEffect(()=>{\n    if(token){\n        dispatch(\n            GetAlbuns(token)\n        )\n       \n    }\n}, [token])\n\n    const array = [0, 1, 2, 3, 5, 6]\n\n    return (\n\n\n\n        <HomeContainer>\n       \n\n        <h2>Albuns mais pesados que o pr√≥prio metal: </h2>\n\n        <RollDiv>\n            {albuns && albuns.map(x=>(\n                <Card link={`/album/${x.id}`} title={x.name} description={x.artist}>\n                     <img src={x.images[1].url} />\n                </Card>\n            ))}\n           \n        </RollDiv>\n\n        <h2>Tente essas bandas: </h2>\n        <RollDiv>\n            {artists && artists.map(x=>(\n                <Card \n                link={''}\n                title={x.name} description={x.genres[1]}>\n                    <img \n                    className='bandsImg'\n                    src={x.images[0].url} />\n                </Card>\n            ))}\n           \n        </RollDiv>\n\n\n\n        </HomeContainer>\n    )\n}"]},"metadata":{},"sourceType":"module"}